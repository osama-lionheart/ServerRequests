//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_RequestApplicationType_ApplicationType", "ApplicationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.ApplicationType), "RequestApplicationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.RequestApplicationType), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK__aspnet_Me__Appli__58520D30", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.aspnet_Applications), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK__aspnet_Pa__Appli__118A8A8C", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.aspnet_Applications), "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.aspnet_Paths), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK__aspnet_Ro__Appli__7AA72534", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.aspnet_Applications), "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.aspnet_Roles), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK__aspnet_Us__Appli__444B1483", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.aspnet_Applications), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.aspnet_Users), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK__aspnet_Me__UserI__59463169", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.aspnet_Users), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK__aspnet_Pe__PathI__192BAC54", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.aspnet_Paths), "aspnet_PersonalizationAllUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.aspnet_PersonalizationAllUsers), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK__aspnet_Pe__PathI__1EE485AA", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.aspnet_Paths), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK__aspnet_Pe__UserI__1FD8A9E3", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.aspnet_Users), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK__aspnet_Pr__UserI__6F357288", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.aspnet_Users), "aspnet_Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.aspnet_Profile), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_User_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.aspnet_Users), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.User), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Server_BladeChassis", "BladeChassi", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.BladeChassis), "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Server), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_CommunicationAction_ServerIP", "ServerIP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.ServerIP), "CommunicationAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.CommunicationAction), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_CommunicationAction_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.User), "CommunicationAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.CommunicationAction), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_User_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Department), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.User), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_SegmentLocation_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Location), "SegmentLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.SegmentLocation), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Server_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Location), "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Server), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Virtualization_OperatingSystem", "OperatingSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.OperatingSystem), "Virtualization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Virtualization), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_SecurityAction_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.User), "SecurityAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.SecurityAction), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_SecurityAction_Vlan", "Vlan", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.Vlan), "SecurityAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.SecurityAction), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Server_ServerType", "ServerType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.ServerType), "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Server), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Virtualization_Server", "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Server), "Virtualization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Virtualization), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_ServerIP_SwitchPort", "SwitchPort", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.SwitchPort), "ServerIP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.ServerIP), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_ServerIP_Virtualization", "Virtualization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Virtualization), "ServerIP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.ServerIP), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_SwitchModule_Switch", "Switch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Switch), "SwitchModule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.SwitchModule), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_SwitchPort_SwitchModule", "SwitchModule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.SwitchModule), "SwitchPort", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.SwitchPort), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.aspnet_Roles), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.aspnet_Users))]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_IPGroup_IP", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.IP), "IPGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.IPGroup), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_IPGroup_IP1", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.IP), "IPGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.IPGroup), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Server_IP", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.IP), "Server", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Server), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_ServerIP_IP", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.IP), "ServerIP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.ServerIP), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Switch_IP", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.IP), "Switch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Switch), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_SwitchPort_IP", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.IP), "SwitchPort", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.SwitchPort), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Vlan_IP", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.IP), "Vlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Vlan), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Port_IP", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.IP), "Port", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Port), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Port_IP1", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.IP), "Port", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Port), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Port_PortType", "PortType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.PortType), "Port", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Port), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Port_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.User), "Port", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Port), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_RequestPort_Port", "Port", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Port), "RequestPort", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.RequestPort), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_CommunicationAction_Request", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Request), "CommunicationAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.CommunicationAction), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Request_Request", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.Request), "Request1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Request), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Request_Request1", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Request), "Request1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Request), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Request_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.User), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Request), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Request_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.User), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Request), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Request_Virtualization", "Virtualization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Virtualization), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Request), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_RequestApplicationType_Request", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Request), "RequestApplicationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.RequestApplicationType), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_RequestPort_Request", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Request), "RequestPort", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.RequestPort), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_SecurityAction_Request", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Request), "SecurityAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.SecurityAction), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_IP_Segment", "Segment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.Segment), "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.IP), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Segment_IP", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.IP), "Segment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Segment), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Segment_IP1", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.IP), "Segment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Segment), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Segment_IPGroup", "IPGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IPRequestForm.Models.IPGroup), "Segment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Segment), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_Segment_Vlan", "Vlan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Vlan), "Segment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.Segment), true)]
[assembly: EdmRelationshipAttribute("IPRequestFormModel", "FK_SegmentLocation_Segment", "Segment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IPRequestForm.Models.Segment), "SegmentLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IPRequestForm.Models.SegmentLocation), true)]

#endregion

namespace IPRequestForm.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IPRequestFormEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IPRequestFormEntities object using the connection string found in the 'IPRequestFormEntities' section of the application configuration file.
        /// </summary>
        public IPRequestFormEntities() : base("name=IPRequestFormEntities", "IPRequestFormEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IPRequestFormEntities object.
        /// </summary>
        public IPRequestFormEntities(string connectionString) : base(connectionString, "IPRequestFormEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IPRequestFormEntities object.
        /// </summary>
        public IPRequestFormEntities(EntityConnection connection) : base(connection, "IPRequestFormEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationType> ApplicationTypes
        {
            get
            {
                if ((_ApplicationTypes == null))
                {
                    _ApplicationTypes = base.CreateObjectSet<ApplicationType>("ApplicationTypes");
                }
                return _ApplicationTypes;
            }
        }
        private ObjectSet<ApplicationType> _ApplicationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Applications> aspnet_Applications
        {
            get
            {
                if ((_aspnet_Applications == null))
                {
                    _aspnet_Applications = base.CreateObjectSet<aspnet_Applications>("aspnet_Applications");
                }
                return _aspnet_Applications;
            }
        }
        private ObjectSet<aspnet_Applications> _aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Paths> aspnet_Paths
        {
            get
            {
                if ((_aspnet_Paths == null))
                {
                    _aspnet_Paths = base.CreateObjectSet<aspnet_Paths>("aspnet_Paths");
                }
                return _aspnet_Paths;
            }
        }
        private ObjectSet<aspnet_Paths> _aspnet_Paths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers
        {
            get
            {
                if ((_aspnet_PersonalizationAllUsers == null))
                {
                    _aspnet_PersonalizationAllUsers = base.CreateObjectSet<aspnet_PersonalizationAllUsers>("aspnet_PersonalizationAllUsers");
                }
                return _aspnet_PersonalizationAllUsers;
            }
        }
        private ObjectSet<aspnet_PersonalizationAllUsers> _aspnet_PersonalizationAllUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                if ((_aspnet_PersonalizationPerUser == null))
                {
                    _aspnet_PersonalizationPerUser = base.CreateObjectSet<aspnet_PersonalizationPerUser>("aspnet_PersonalizationPerUser");
                }
                return _aspnet_PersonalizationPerUser;
            }
        }
        private ObjectSet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Profile> aspnet_Profile
        {
            get
            {
                if ((_aspnet_Profile == null))
                {
                    _aspnet_Profile = base.CreateObjectSet<aspnet_Profile>("aspnet_Profile");
                }
                return _aspnet_Profile;
            }
        }
        private ObjectSet<aspnet_Profile> _aspnet_Profile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_SchemaVersions> aspnet_SchemaVersions
        {
            get
            {
                if ((_aspnet_SchemaVersions == null))
                {
                    _aspnet_SchemaVersions = base.CreateObjectSet<aspnet_SchemaVersions>("aspnet_SchemaVersions");
                }
                return _aspnet_SchemaVersions;
            }
        }
        private ObjectSet<aspnet_SchemaVersions> _aspnet_SchemaVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events
        {
            get
            {
                if ((_aspnet_WebEvent_Events == null))
                {
                    _aspnet_WebEvent_Events = base.CreateObjectSet<aspnet_WebEvent_Events>("aspnet_WebEvent_Events");
                }
                return _aspnet_WebEvent_Events;
            }
        }
        private ObjectSet<aspnet_WebEvent_Events> _aspnet_WebEvent_Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BladeChassis> BladeChassis
        {
            get
            {
                if ((_BladeChassis == null))
                {
                    _BladeChassis = base.CreateObjectSet<BladeChassis>("BladeChassis");
                }
                return _BladeChassis;
            }
        }
        private ObjectSet<BladeChassis> _BladeChassis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommunicationAction> CommunicationActions
        {
            get
            {
                if ((_CommunicationActions == null))
                {
                    _CommunicationActions = base.CreateObjectSet<CommunicationAction>("CommunicationActions");
                }
                return _CommunicationActions;
            }
        }
        private ObjectSet<CommunicationAction> _CommunicationActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IPGroup> IPGroups
        {
            get
            {
                if ((_IPGroups == null))
                {
                    _IPGroups = base.CreateObjectSet<IPGroup>("IPGroups");
                }
                return _IPGroups;
            }
        }
        private ObjectSet<IPGroup> _IPGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OperatingSystem> OperatingSystems
        {
            get
            {
                if ((_OperatingSystems == null))
                {
                    _OperatingSystems = base.CreateObjectSet<OperatingSystem>("OperatingSystems");
                }
                return _OperatingSystems;
            }
        }
        private ObjectSet<OperatingSystem> _OperatingSystems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortType> PortTypes
        {
            get
            {
                if ((_PortTypes == null))
                {
                    _PortTypes = base.CreateObjectSet<PortType>("PortTypes");
                }
                return _PortTypes;
            }
        }
        private ObjectSet<PortType> _PortTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestApplicationType> RequestApplicationTypes
        {
            get
            {
                if ((_RequestApplicationTypes == null))
                {
                    _RequestApplicationTypes = base.CreateObjectSet<RequestApplicationType>("RequestApplicationTypes");
                }
                return _RequestApplicationTypes;
            }
        }
        private ObjectSet<RequestApplicationType> _RequestApplicationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityAction> SecurityActions
        {
            get
            {
                if ((_SecurityActions == null))
                {
                    _SecurityActions = base.CreateObjectSet<SecurityAction>("SecurityActions");
                }
                return _SecurityActions;
            }
        }
        private ObjectSet<SecurityAction> _SecurityActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SegmentLocation> SegmentLocations
        {
            get
            {
                if ((_SegmentLocations == null))
                {
                    _SegmentLocations = base.CreateObjectSet<SegmentLocation>("SegmentLocations");
                }
                return _SegmentLocations;
            }
        }
        private ObjectSet<SegmentLocation> _SegmentLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Server> Servers
        {
            get
            {
                if ((_Servers == null))
                {
                    _Servers = base.CreateObjectSet<Server>("Servers");
                }
                return _Servers;
            }
        }
        private ObjectSet<Server> _Servers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServerIP> ServerIPs
        {
            get
            {
                if ((_ServerIPs == null))
                {
                    _ServerIPs = base.CreateObjectSet<ServerIP>("ServerIPs");
                }
                return _ServerIPs;
            }
        }
        private ObjectSet<ServerIP> _ServerIPs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServerType> ServerTypes
        {
            get
            {
                if ((_ServerTypes == null))
                {
                    _ServerTypes = base.CreateObjectSet<ServerType>("ServerTypes");
                }
                return _ServerTypes;
            }
        }
        private ObjectSet<ServerType> _ServerTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Switch> Switches
        {
            get
            {
                if ((_Switches == null))
                {
                    _Switches = base.CreateObjectSet<Switch>("Switches");
                }
                return _Switches;
            }
        }
        private ObjectSet<Switch> _Switches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SwitchModule> SwitchModules
        {
            get
            {
                if ((_SwitchModules == null))
                {
                    _SwitchModules = base.CreateObjectSet<SwitchModule>("SwitchModules");
                }
                return _SwitchModules;
            }
        }
        private ObjectSet<SwitchModule> _SwitchModules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SwitchPort> SwitchPorts
        {
            get
            {
                if ((_SwitchPorts == null))
                {
                    _SwitchPorts = base.CreateObjectSet<SwitchPort>("SwitchPorts");
                }
                return _SwitchPorts;
            }
        }
        private ObjectSet<SwitchPort> _SwitchPorts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Virtualization> Virtualizations
        {
            get
            {
                if ((_Virtualizations == null))
                {
                    _Virtualizations = base.CreateObjectSet<Virtualization>("Virtualizations");
                }
                return _Virtualizations;
            }
        }
        private ObjectSet<Virtualization> _Virtualizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vlan> Vlans
        {
            get
            {
                if ((_Vlans == null))
                {
                    _Vlans = base.CreateObjectSet<Vlan>("Vlans");
                }
                return _Vlans;
            }
        }
        private ObjectSet<Vlan> _Vlans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IP> IPs
        {
            get
            {
                if ((_IPs == null))
                {
                    _IPs = base.CreateObjectSet<IP>("IPs");
                }
                return _IPs;
            }
        }
        private ObjectSet<IP> _IPs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Port> Ports
        {
            get
            {
                if ((_Ports == null))
                {
                    _Ports = base.CreateObjectSet<Port>("Ports");
                }
                return _Ports;
            }
        }
        private ObjectSet<Port> _Ports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestPort> RequestPorts
        {
            get
            {
                if ((_RequestPorts == null))
                {
                    _RequestPorts = base.CreateObjectSet<RequestPort>("RequestPorts");
                }
                return _RequestPorts;
            }
        }
        private ObjectSet<RequestPort> _RequestPorts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Request> Requests
        {
            get
            {
                if ((_Requests == null))
                {
                    _Requests = base.CreateObjectSet<Request>("Requests");
                }
                return _Requests;
            }
        }
        private ObjectSet<Request> _Requests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Segment> Segments
        {
            get
            {
                if ((_Segments == null))
                {
                    _Segments = base.CreateObjectSet<Segment>("Segments");
                }
                return _Segments;
            }
        }
        private ObjectSet<Segment> _Segments;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationTypes(ApplicationType applicationType)
        {
            base.AddObject("ApplicationTypes", applicationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Applications(aspnet_Applications aspnet_Applications)
        {
            base.AddObject("aspnet_Applications", aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Paths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Paths(aspnet_Paths aspnet_Paths)
        {
            base.AddObject("aspnet_Paths", aspnet_Paths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationAllUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers)
        {
            base.AddObject("aspnet_PersonalizationAllUsers", aspnet_PersonalizationAllUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationPerUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser)
        {
            base.AddObject("aspnet_PersonalizationPerUser", aspnet_PersonalizationPerUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Profile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Profile(aspnet_Profile aspnet_Profile)
        {
            base.AddObject("aspnet_Profile", aspnet_Profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_SchemaVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_SchemaVersions(aspnet_SchemaVersions aspnet_SchemaVersions)
        {
            base.AddObject("aspnet_SchemaVersions", aspnet_SchemaVersions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_WebEvent_Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_WebEvent_Events(aspnet_WebEvent_Events aspnet_WebEvent_Events)
        {
            base.AddObject("aspnet_WebEvent_Events", aspnet_WebEvent_Events);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BladeChassis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBladeChassis(BladeChassis bladeChassis)
        {
            base.AddObject("BladeChassis", bladeChassis);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommunicationActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunicationActions(CommunicationAction communicationAction)
        {
            base.AddObject("CommunicationActions", communicationAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IPGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIPGroups(IPGroup iPGroup)
        {
            base.AddObject("IPGroups", iPGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OperatingSystems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperatingSystems(OperatingSystem operatingSystem)
        {
            base.AddObject("OperatingSystems", operatingSystem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortTypes(PortType portType)
        {
            base.AddObject("PortTypes", portType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestApplicationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestApplicationTypes(RequestApplicationType requestApplicationType)
        {
            base.AddObject("RequestApplicationTypes", requestApplicationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityActions(SecurityAction securityAction)
        {
            base.AddObject("SecurityActions", securityAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SegmentLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSegmentLocations(SegmentLocation segmentLocation)
        {
            base.AddObject("SegmentLocations", segmentLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Servers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServers(Server server)
        {
            base.AddObject("Servers", server);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServerIPs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServerIPs(ServerIP serverIP)
        {
            base.AddObject("ServerIPs", serverIP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServerTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServerTypes(ServerType serverType)
        {
            base.AddObject("ServerTypes", serverType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Switches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSwitches(Switch @switch)
        {
            base.AddObject("Switches", @switch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SwitchModules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSwitchModules(SwitchModule switchModule)
        {
            base.AddObject("SwitchModules", switchModule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SwitchPorts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSwitchPorts(SwitchPort switchPort)
        {
            base.AddObject("SwitchPorts", switchPort);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Virtualizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVirtualizations(Virtualization virtualization)
        {
            base.AddObject("Virtualizations", virtualization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vlans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVlans(Vlan vlan)
        {
            base.AddObject("Vlans", vlan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IPs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIPs(IP iP)
        {
            base.AddObject("IPs", iP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPorts(Port port)
        {
            base.AddObject("Ports", port);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestPorts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestPorts(RequestPort requestPort)
        {
            base.AddObject("RequestPorts", requestPort);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Requests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequests(Request request)
        {
            base.AddObject("Requests", request);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Segments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSegments(Segment segment)
        {
            base.AddObject("Segments", segment);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="ApplicationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ApplicationType CreateApplicationType(global::System.Int32 id, global::System.String name)
        {
            ApplicationType applicationType = new ApplicationType();
            applicationType.Id = id;
            applicationType.Name = name;
            return applicationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_RequestApplicationType_ApplicationType", "RequestApplicationType")]
        public EntityCollection<RequestApplicationType> RequestApplicationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestApplicationType>("IPRequestFormModel.FK_RequestApplicationType_ApplicationType", "RequestApplicationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestApplicationType>("IPRequestFormModel.FK_RequestApplicationType_ApplicationType", "RequestApplicationType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static aspnet_Applications Createaspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            aspnet_Applications aspnet_Applications = new aspnet_Applications();
            aspnet_Applications.ApplicationName = applicationName;
            aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            aspnet_Applications.ApplicationId = applicationId;
            return aspnet_Applications;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Me__Appli__58520D30", "aspnet_Membership")]
        public EntityCollection<aspnet_Membership> aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Membership>("IPRequestFormModel.FK__aspnet_Me__Appli__58520D30", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Membership>("IPRequestFormModel.FK__aspnet_Me__Appli__58520D30", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pa__Appli__118A8A8C", "aspnet_Paths")]
        public EntityCollection<aspnet_Paths> aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pa__Appli__118A8A8C", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pa__Appli__118A8A8C", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Ro__Appli__7AA72534", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("IPRequestFormModel.FK__aspnet_Ro__Appli__7AA72534", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("IPRequestFormModel.FK__aspnet_Ro__Appli__7AA72534", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Us__Appli__444B1483", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("IPRequestFormModel.FK__aspnet_Us__Appli__444B1483", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("IPRequestFormModel.FK__aspnet_Us__Appli__444B1483", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Me__Appli__58520D30", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Me__Appli__58520D30", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Me__Appli__58520D30", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Me__Appli__58520D30", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Me__Appli__58520D30", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Me__UserI__59463169", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Me__UserI__59463169", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Me__UserI__59463169", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Me__UserI__59463169", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Me__UserI__59463169", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_Paths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Paths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Paths object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="loweredPath">Initial value of the LoweredPath property.</param>
        public static aspnet_Paths Createaspnet_Paths(global::System.Guid applicationId, global::System.Guid pathId, global::System.String path, global::System.String loweredPath)
        {
            aspnet_Paths aspnet_Paths = new aspnet_Paths();
            aspnet_Paths.ApplicationId = applicationId;
            aspnet_Paths.PathId = pathId;
            aspnet_Paths.Path = path;
            aspnet_Paths.LoweredPath = loweredPath;
            return aspnet_Paths;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredPath
        {
            get
            {
                return _LoweredPath;
            }
            set
            {
                OnLoweredPathChanging(value);
                ReportPropertyChanging("LoweredPath");
                _LoweredPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredPath");
                OnLoweredPathChanged();
            }
        }
        private global::System.String _LoweredPath;
        partial void OnLoweredPathChanging(global::System.String value);
        partial void OnLoweredPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pa__Appli__118A8A8C", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Pa__Appli__118A8A8C", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Pa__Appli__118A8A8C", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Pa__Appli__118A8A8C", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Pa__Appli__118A8A8C", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pe__PathI__192BAC54", "aspnet_PersonalizationAllUsers")]
        public aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("IPRequestFormModel.FK__aspnet_Pe__PathI__192BAC54", "aspnet_PersonalizationAllUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("IPRequestFormModel.FK__aspnet_Pe__PathI__192BAC54", "aspnet_PersonalizationAllUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("IPRequestFormModel.FK__aspnet_Pe__PathI__192BAC54", "aspnet_PersonalizationAllUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_PersonalizationAllUsers>("IPRequestFormModel.FK__aspnet_Pe__PathI__192BAC54", "aspnet_PersonalizationAllUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pe__PathI__1EE485AA", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("IPRequestFormModel.FK__aspnet_Pe__PathI__1EE485AA", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("IPRequestFormModel.FK__aspnet_Pe__PathI__1EE485AA", "aspnet_PersonalizationPerUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_PersonalizationAllUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationAllUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationAllUsers object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationAllUsers Createaspnet_PersonalizationAllUsers(global::System.Guid pathId, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers = new aspnet_PersonalizationAllUsers();
            aspnet_PersonalizationAllUsers.PathId = pathId;
            aspnet_PersonalizationAllUsers.PageSettings = pageSettings;
            aspnet_PersonalizationAllUsers.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationAllUsers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pe__PathI__192BAC54", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pe__PathI__192BAC54", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pe__PathI__192BAC54", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pe__PathI__192BAC54", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pe__PathI__192BAC54", "aspnet_Paths", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_PersonalizationPerUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationPerUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationPerUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationPerUser Createaspnet_PersonalizationPerUser(global::System.Guid id, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser = new aspnet_PersonalizationPerUser();
            aspnet_PersonalizationPerUser.Id = id;
            aspnet_PersonalizationPerUser.PageSettings = pageSettings;
            aspnet_PersonalizationPerUser.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationPerUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                OnPathIdChanging(value);
                ReportPropertyChanging("PathId");
                _PathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PathId");
                OnPathIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PathId;
        partial void OnPathIdChanging(Nullable<global::System.Guid> value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pe__PathI__1EE485AA", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pe__PathI__1EE485AA", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pe__PathI__1EE485AA", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pe__PathI__1EE485AA", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("IPRequestFormModel.FK__aspnet_Pe__PathI__1EE485AA", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pe__UserI__1FD8A9E3", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Pe__UserI__1FD8A9E3", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Pe__UserI__1FD8A9E3", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Pe__UserI__1FD8A9E3", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Pe__UserI__1FD8A9E3", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Profile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="propertyNames">Initial value of the PropertyNames property.</param>
        /// <param name="propertyValuesString">Initial value of the PropertyValuesString property.</param>
        /// <param name="propertyValuesBinary">Initial value of the PropertyValuesBinary property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_Profile Createaspnet_Profile(global::System.Guid userId, global::System.String propertyNames, global::System.String propertyValuesString, global::System.Byte[] propertyValuesBinary, global::System.DateTime lastUpdatedDate)
        {
            aspnet_Profile aspnet_Profile = new aspnet_Profile();
            aspnet_Profile.UserId = userId;
            aspnet_Profile.PropertyNames = propertyNames;
            aspnet_Profile.PropertyValuesString = propertyValuesString;
            aspnet_Profile.PropertyValuesBinary = propertyValuesBinary;
            aspnet_Profile.LastUpdatedDate = lastUpdatedDate;
            return aspnet_Profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyNames
        {
            get
            {
                return _PropertyNames;
            }
            set
            {
                OnPropertyNamesChanging(value);
                ReportPropertyChanging("PropertyNames");
                _PropertyNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyNames");
                OnPropertyNamesChanged();
            }
        }
        private global::System.String _PropertyNames;
        partial void OnPropertyNamesChanging(global::System.String value);
        partial void OnPropertyNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyValuesString
        {
            get
            {
                return _PropertyValuesString;
            }
            set
            {
                OnPropertyValuesStringChanging(value);
                ReportPropertyChanging("PropertyValuesString");
                _PropertyValuesString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesString");
                OnPropertyValuesStringChanged();
            }
        }
        private global::System.String _PropertyValuesString;
        partial void OnPropertyValuesStringChanging(global::System.String value);
        partial void OnPropertyValuesStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PropertyValuesBinary
        {
            get
            {
                return StructuralObject.GetValidValue(_PropertyValuesBinary);
            }
            set
            {
                OnPropertyValuesBinaryChanging(value);
                ReportPropertyChanging("PropertyValuesBinary");
                _PropertyValuesBinary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesBinary");
                OnPropertyValuesBinaryChanged();
            }
        }
        private global::System.Byte[] _PropertyValuesBinary;
        partial void OnPropertyValuesBinaryChanging(global::System.Byte[] value);
        partial void OnPropertyValuesBinaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pr__UserI__6F357288", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Pr__UserI__6F357288", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Pr__UserI__6F357288", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Pr__UserI__6F357288", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("IPRequestFormModel.FK__aspnet_Pr__UserI__6F357288", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.ApplicationId = applicationId;
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Ro__Appli__7AA72534", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Ro__Appli__7AA72534", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Ro__Appli__7AA72534", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Ro__Appli__7AA72534", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Ro__Appli__7AA72534", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("IPRequestFormModel.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("IPRequestFormModel.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_SchemaVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_SchemaVersions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_SchemaVersions object.
        /// </summary>
        /// <param name="feature">Initial value of the Feature property.</param>
        /// <param name="compatibleSchemaVersion">Initial value of the CompatibleSchemaVersion property.</param>
        /// <param name="isCurrentVersion">Initial value of the IsCurrentVersion property.</param>
        public static aspnet_SchemaVersions Createaspnet_SchemaVersions(global::System.String feature, global::System.String compatibleSchemaVersion, global::System.Boolean isCurrentVersion)
        {
            aspnet_SchemaVersions aspnet_SchemaVersions = new aspnet_SchemaVersions();
            aspnet_SchemaVersions.Feature = feature;
            aspnet_SchemaVersions.CompatibleSchemaVersion = compatibleSchemaVersion;
            aspnet_SchemaVersions.IsCurrentVersion = isCurrentVersion;
            return aspnet_SchemaVersions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                if (_Feature != value)
                {
                    OnFeatureChanging(value);
                    ReportPropertyChanging("Feature");
                    _Feature = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Feature");
                    OnFeatureChanged();
                }
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompatibleSchemaVersion
        {
            get
            {
                return _CompatibleSchemaVersion;
            }
            set
            {
                if (_CompatibleSchemaVersion != value)
                {
                    OnCompatibleSchemaVersionChanging(value);
                    ReportPropertyChanging("CompatibleSchemaVersion");
                    _CompatibleSchemaVersion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompatibleSchemaVersion");
                    OnCompatibleSchemaVersionChanged();
                }
            }
        }
        private global::System.String _CompatibleSchemaVersion;
        partial void OnCompatibleSchemaVersionChanging(global::System.String value);
        partial void OnCompatibleSchemaVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentVersion
        {
            get
            {
                return _IsCurrentVersion;
            }
            set
            {
                OnIsCurrentVersionChanging(value);
                ReportPropertyChanging("IsCurrentVersion");
                _IsCurrentVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentVersion");
                OnIsCurrentVersionChanged();
            }
        }
        private global::System.Boolean _IsCurrentVersion;
        partial void OnIsCurrentVersionChanging(global::System.Boolean value);
        partial void OnIsCurrentVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Us__Appli__444B1483", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Us__Appli__444B1483", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Us__Appli__444B1483", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Us__Appli__444B1483", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("IPRequestFormModel.FK__aspnet_Us__Appli__444B1483", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Me__UserI__59463169", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("IPRequestFormModel.FK__aspnet_Me__UserI__59463169", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("IPRequestFormModel.FK__aspnet_Me__UserI__59463169", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("IPRequestFormModel.FK__aspnet_Me__UserI__59463169", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("IPRequestFormModel.FK__aspnet_Me__UserI__59463169", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pe__UserI__1FD8A9E3", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("IPRequestFormModel.FK__aspnet_Pe__UserI__1FD8A9E3", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("IPRequestFormModel.FK__aspnet_Pe__UserI__1FD8A9E3", "aspnet_PersonalizationPerUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK__aspnet_Pr__UserI__6F357288", "aspnet_Profile")]
        public aspnet_Profile aspnet_Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("IPRequestFormModel.FK__aspnet_Pr__UserI__6F357288", "aspnet_Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("IPRequestFormModel.FK__aspnet_Pr__UserI__6F357288", "aspnet_Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Profile> aspnet_ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("IPRequestFormModel.FK__aspnet_Pr__UserI__6F357288", "aspnet_Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Profile>("IPRequestFormModel.FK__aspnet_Pr__UserI__6F357288", "aspnet_Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_User_aspnet_Users", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("IPRequestFormModel.FK_User_aspnet_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("IPRequestFormModel.FK_User_aspnet_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("IPRequestFormModel.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("IPRequestFormModel.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="aspnet_WebEvent_Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_WebEvent_Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_WebEvent_Events object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventTimeUtc">Initial value of the EventTimeUtc property.</param>
        /// <param name="eventTime">Initial value of the EventTime property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventSequence">Initial value of the EventSequence property.</param>
        /// <param name="eventOccurrence">Initial value of the EventOccurrence property.</param>
        /// <param name="eventCode">Initial value of the EventCode property.</param>
        /// <param name="eventDetailCode">Initial value of the EventDetailCode property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        public static aspnet_WebEvent_Events Createaspnet_WebEvent_Events(global::System.String eventId, global::System.DateTime eventTimeUtc, global::System.DateTime eventTime, global::System.String eventType, global::System.Decimal eventSequence, global::System.Decimal eventOccurrence, global::System.Int32 eventCode, global::System.Int32 eventDetailCode, global::System.String machineName)
        {
            aspnet_WebEvent_Events aspnet_WebEvent_Events = new aspnet_WebEvent_Events();
            aspnet_WebEvent_Events.EventId = eventId;
            aspnet_WebEvent_Events.EventTimeUtc = eventTimeUtc;
            aspnet_WebEvent_Events.EventTime = eventTime;
            aspnet_WebEvent_Events.EventType = eventType;
            aspnet_WebEvent_Events.EventSequence = eventSequence;
            aspnet_WebEvent_Events.EventOccurrence = eventOccurrence;
            aspnet_WebEvent_Events.EventCode = eventCode;
            aspnet_WebEvent_Events.EventDetailCode = eventDetailCode;
            aspnet_WebEvent_Events.MachineName = machineName;
            return aspnet_WebEvent_Events;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.String _EventId;
        partial void OnEventIdChanging(global::System.String value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTimeUtc
        {
            get
            {
                return _EventTimeUtc;
            }
            set
            {
                OnEventTimeUtcChanging(value);
                ReportPropertyChanging("EventTimeUtc");
                _EventTimeUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTimeUtc");
                OnEventTimeUtcChanged();
            }
        }
        private global::System.DateTime _EventTimeUtc;
        partial void OnEventTimeUtcChanging(global::System.DateTime value);
        partial void OnEventTimeUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTime
        {
            get
            {
                return _EventTime;
            }
            set
            {
                OnEventTimeChanging(value);
                ReportPropertyChanging("EventTime");
                _EventTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTime");
                OnEventTimeChanged();
            }
        }
        private global::System.DateTime _EventTime;
        partial void OnEventTimeChanging(global::System.DateTime value);
        partial void OnEventTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventSequence
        {
            get
            {
                return _EventSequence;
            }
            set
            {
                OnEventSequenceChanging(value);
                ReportPropertyChanging("EventSequence");
                _EventSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventSequence");
                OnEventSequenceChanged();
            }
        }
        private global::System.Decimal _EventSequence;
        partial void OnEventSequenceChanging(global::System.Decimal value);
        partial void OnEventSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventOccurrence
        {
            get
            {
                return _EventOccurrence;
            }
            set
            {
                OnEventOccurrenceChanging(value);
                ReportPropertyChanging("EventOccurrence");
                _EventOccurrence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventOccurrence");
                OnEventOccurrenceChanged();
            }
        }
        private global::System.Decimal _EventOccurrence;
        partial void OnEventOccurrenceChanging(global::System.Decimal value);
        partial void OnEventOccurrenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCode
        {
            get
            {
                return _EventCode;
            }
            set
            {
                OnEventCodeChanging(value);
                ReportPropertyChanging("EventCode");
                _EventCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventCode");
                OnEventCodeChanged();
            }
        }
        private global::System.Int32 _EventCode;
        partial void OnEventCodeChanging(global::System.Int32 value);
        partial void OnEventCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventDetailCode
        {
            get
            {
                return _EventDetailCode;
            }
            set
            {
                OnEventDetailCodeChanging(value);
                ReportPropertyChanging("EventDetailCode");
                _EventDetailCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDetailCode");
                OnEventDetailCodeChanged();
            }
        }
        private global::System.Int32 _EventDetailCode;
        partial void OnEventDetailCodeChanging(global::System.Int32 value);
        partial void OnEventDetailCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationPath
        {
            get
            {
                return _ApplicationPath;
            }
            set
            {
                OnApplicationPathChanging(value);
                ReportPropertyChanging("ApplicationPath");
                _ApplicationPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationPath");
                OnApplicationPathChanged();
            }
        }
        private global::System.String _ApplicationPath;
        partial void OnApplicationPathChanging(global::System.String value);
        partial void OnApplicationPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationVirtualPath
        {
            get
            {
                return _ApplicationVirtualPath;
            }
            set
            {
                OnApplicationVirtualPathChanging(value);
                ReportPropertyChanging("ApplicationVirtualPath");
                _ApplicationVirtualPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationVirtualPath");
                OnApplicationVirtualPathChanged();
            }
        }
        private global::System.String _ApplicationVirtualPath;
        partial void OnApplicationVirtualPathChanging(global::System.String value);
        partial void OnApplicationVirtualPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestUrl
        {
            get
            {
                return _RequestUrl;
            }
            set
            {
                OnRequestUrlChanging(value);
                ReportPropertyChanging("RequestUrl");
                _RequestUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestUrl");
                OnRequestUrlChanged();
            }
        }
        private global::System.String _RequestUrl;
        partial void OnRequestUrlChanging(global::System.String value);
        partial void OnRequestUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionType
        {
            get
            {
                return _ExceptionType;
            }
            set
            {
                OnExceptionTypeChanging(value);
                ReportPropertyChanging("ExceptionType");
                _ExceptionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionType");
                OnExceptionTypeChanged();
            }
        }
        private global::System.String _ExceptionType;
        partial void OnExceptionTypeChanging(global::System.String value);
        partial void OnExceptionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="BladeChassis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BladeChassis : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BladeChassis object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nICTeaming">Initial value of the NICTeaming property.</param>
        /// <param name="rackChassisPort">Initial value of the RackChassisPort property.</param>
        public static BladeChassis CreateBladeChassis(global::System.Int32 id, global::System.Boolean nICTeaming, global::System.String rackChassisPort)
        {
            BladeChassis bladeChassis = new BladeChassis();
            bladeChassis.Id = id;
            bladeChassis.NICTeaming = nICTeaming;
            bladeChassis.RackChassisPort = rackChassisPort;
            return bladeChassis;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NICTeaming
        {
            get
            {
                return _NICTeaming;
            }
            set
            {
                OnNICTeamingChanging(value);
                ReportPropertyChanging("NICTeaming");
                _NICTeaming = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NICTeaming");
                OnNICTeamingChanged();
            }
        }
        private global::System.Boolean _NICTeaming;
        partial void OnNICTeamingChanging(global::System.Boolean value);
        partial void OnNICTeamingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RackChassisPort
        {
            get
            {
                return _RackChassisPort;
            }
            set
            {
                OnRackChassisPortChanging(value);
                ReportPropertyChanging("RackChassisPort");
                _RackChassisPort = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RackChassisPort");
                OnRackChassisPortChanged();
            }
        }
        private global::System.String _RackChassisPort;
        partial void OnRackChassisPortChanging(global::System.String value);
        partial void OnRackChassisPortChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Server_BladeChassis", "Server")]
        public EntityCollection<Server> Servers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Server>("IPRequestFormModel.FK_Server_BladeChassis", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Server>("IPRequestFormModel.FK_Server_BladeChassis", "Server", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="CommunicationAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommunicationAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommunicationAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="assigned">Initial value of the Assigned property.</param>
        public static CommunicationAction CreateCommunicationAction(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime date, global::System.Int32 requestId, global::System.Boolean assigned)
        {
            CommunicationAction communicationAction = new CommunicationAction();
            communicationAction.Id = id;
            communicationAction.UserId = userId;
            communicationAction.Date = date;
            communicationAction.RequestId = requestId;
            communicationAction.Assigned = assigned;
            return communicationAction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Completed;
        partial void OnCompletedChanging(Nullable<global::System.Boolean> value);
        partial void OnCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServerIPId
        {
            get
            {
                return _ServerIPId;
            }
            set
            {
                OnServerIPIdChanging(value);
                ReportPropertyChanging("ServerIPId");
                _ServerIPId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerIPId");
                OnServerIPIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ServerIPId;
        partial void OnServerIPIdChanging(Nullable<global::System.Int32> value);
        partial void OnServerIPIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Int32 _RequestId;
        partial void OnRequestIdChanging(global::System.Int32 value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Assigned
        {
            get
            {
                return _Assigned;
            }
            set
            {
                OnAssignedChanging(value);
                ReportPropertyChanging("Assigned");
                _Assigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Assigned");
                OnAssignedChanged();
            }
        }
        private global::System.Boolean _Assigned;
        partial void OnAssignedChanging(global::System.Boolean value);
        partial void OnAssignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_CommunicationAction_ServerIP", "ServerIP")]
        public ServerIP ServerIP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServerIP>("IPRequestFormModel.FK_CommunicationAction_ServerIP", "ServerIP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServerIP>("IPRequestFormModel.FK_CommunicationAction_ServerIP", "ServerIP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServerIP> ServerIPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServerIP>("IPRequestFormModel.FK_CommunicationAction_ServerIP", "ServerIP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServerIP>("IPRequestFormModel.FK_CommunicationAction_ServerIP", "ServerIP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_CommunicationAction_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_CommunicationAction_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_CommunicationAction_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_CommunicationAction_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("IPRequestFormModel.FK_CommunicationAction_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_CommunicationAction_Request", "Request")]
        public Request Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_CommunicationAction_Request", "Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_CommunicationAction_Request", "Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Request> RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_CommunicationAction_Request", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Request>("IPRequestFormModel.FK_CommunicationAction_Request", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.String name)
        {
            Department department = new Department();
            department.Id = id;
            department.Name = name;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_User_Department", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("IPRequestFormModel.FK_User_Department", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("IPRequestFormModel.FK_User_Department", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="IP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IP object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static IP CreateIP(global::System.Int32 id, global::System.Byte[] address)
        {
            IP iP = new IP();
            iP.Id = id;
            iP.Address = address;
            return iP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Address
        {
            get
            {
                return StructuralObject.GetValidValue(_Address);
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.Byte[] _Address;
        partial void OnAddressChanging(global::System.Byte[] value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SegmentId
        {
            get
            {
                return _SegmentId;
            }
            set
            {
                OnSegmentIdChanging(value);
                ReportPropertyChanging("SegmentId");
                _SegmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SegmentId");
                OnSegmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SegmentId;
        partial void OnSegmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnSegmentIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_IPGroup_IP", "IPGroup")]
        public EntityCollection<IPGroup> IPGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IPGroup>("IPRequestFormModel.FK_IPGroup_IP", "IPGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IPGroup>("IPRequestFormModel.FK_IPGroup_IP", "IPGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_IPGroup_IP1", "IPGroup")]
        public EntityCollection<IPGroup> IPGroups1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IPGroup>("IPRequestFormModel.FK_IPGroup_IP1", "IPGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IPGroup>("IPRequestFormModel.FK_IPGroup_IP1", "IPGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Server_IP", "Server")]
        public EntityCollection<Server> Servers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Server>("IPRequestFormModel.FK_Server_IP", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Server>("IPRequestFormModel.FK_Server_IP", "Server", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_ServerIP_IP", "ServerIP")]
        public EntityCollection<ServerIP> ServerIPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServerIP>("IPRequestFormModel.FK_ServerIP_IP", "ServerIP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServerIP>("IPRequestFormModel.FK_ServerIP_IP", "ServerIP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Switch_IP", "Switch")]
        public EntityCollection<Switch> Switches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Switch>("IPRequestFormModel.FK_Switch_IP", "Switch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Switch>("IPRequestFormModel.FK_Switch_IP", "Switch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SwitchPort_IP", "SwitchPort")]
        public EntityCollection<SwitchPort> SwitchPorts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SwitchPort>("IPRequestFormModel.FK_SwitchPort_IP", "SwitchPort");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SwitchPort>("IPRequestFormModel.FK_SwitchPort_IP", "SwitchPort", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Vlan_IP", "Vlan")]
        public EntityCollection<Vlan> Vlans
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vlan>("IPRequestFormModel.FK_Vlan_IP", "Vlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vlan>("IPRequestFormModel.FK_Vlan_IP", "Vlan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Port_IP", "Port")]
        public EntityCollection<Port> Ports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Port>("IPRequestFormModel.FK_Port_IP", "Port");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Port>("IPRequestFormModel.FK_Port_IP", "Port", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Port_IP1", "Port")]
        public EntityCollection<Port> Ports1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Port>("IPRequestFormModel.FK_Port_IP1", "Port");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Port>("IPRequestFormModel.FK_Port_IP1", "Port", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_IP_Segment", "Segment")]
        public Segment Segment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("IPRequestFormModel.FK_IP_Segment", "Segment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("IPRequestFormModel.FK_IP_Segment", "Segment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Segment> SegmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("IPRequestFormModel.FK_IP_Segment", "Segment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Segment>("IPRequestFormModel.FK_IP_Segment", "Segment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Segment_IP", "Segment")]
        public EntityCollection<Segment> Segments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Segment>("IPRequestFormModel.FK_Segment_IP", "Segment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Segment>("IPRequestFormModel.FK_Segment_IP", "Segment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Segment_IP1", "Segment")]
        public EntityCollection<Segment> Segments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Segment>("IPRequestFormModel.FK_Segment_IP1", "Segment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Segment>("IPRequestFormModel.FK_Segment_IP1", "Segment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="IPGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IPGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IPGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="iPId">Initial value of the IPId property.</param>
        /// <param name="subnetMaskId">Initial value of the SubnetMaskId property.</param>
        public static IPGroup CreateIPGroup(global::System.Int32 id, global::System.String name, global::System.Int32 iPId, global::System.Int32 subnetMaskId)
        {
            IPGroup iPGroup = new IPGroup();
            iPGroup.Id = id;
            iPGroup.Name = name;
            iPGroup.IPId = iPId;
            iPGroup.SubnetMaskId = subnetMaskId;
            return iPGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IPId
        {
            get
            {
                return _IPId;
            }
            set
            {
                OnIPIdChanging(value);
                ReportPropertyChanging("IPId");
                _IPId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IPId");
                OnIPIdChanged();
            }
        }
        private global::System.Int32 _IPId;
        partial void OnIPIdChanging(global::System.Int32 value);
        partial void OnIPIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubnetMaskId
        {
            get
            {
                return _SubnetMaskId;
            }
            set
            {
                OnSubnetMaskIdChanging(value);
                ReportPropertyChanging("SubnetMaskId");
                _SubnetMaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubnetMaskId");
                OnSubnetMaskIdChanged();
            }
        }
        private global::System.Int32 _SubnetMaskId;
        partial void OnSubnetMaskIdChanging(global::System.Int32 value);
        partial void OnSubnetMaskIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_IPGroup_IP", "IP")]
        public IP IP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_IPGroup_IP", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_IPGroup_IP", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> IPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_IPGroup_IP", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_IPGroup_IP", "IP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_IPGroup_IP1", "IP")]
        public IP SubnetMask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_IPGroup_IP1", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_IPGroup_IP1", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> SubnetMaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_IPGroup_IP1", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_IPGroup_IP1", "IP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Segment_IPGroup", "Segment")]
        public EntityCollection<Segment> Segments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Segment>("IPRequestFormModel.FK_Segment_IPGroup", "Segment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Segment>("IPRequestFormModel.FK_Segment_IPGroup", "Segment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Location CreateLocation(global::System.Int32 id, global::System.String name)
        {
            Location location = new Location();
            location.Id = id;
            location.Name = name;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SegmentLocation_Location", "SegmentLocation")]
        public EntityCollection<SegmentLocation> SegmentLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SegmentLocation>("IPRequestFormModel.FK_SegmentLocation_Location", "SegmentLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SegmentLocation>("IPRequestFormModel.FK_SegmentLocation_Location", "SegmentLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Server_Location", "Server")]
        public EntityCollection<Server> Servers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Server>("IPRequestFormModel.FK_Server_Location", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Server>("IPRequestFormModel.FK_Server_Location", "Server", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="OperatingSystem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OperatingSystem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OperatingSystem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="architecture">Initial value of the Architecture property.</param>
        public static OperatingSystem CreateOperatingSystem(global::System.Int32 id, global::System.String name, global::System.Int32 architecture)
        {
            OperatingSystem operatingSystem = new OperatingSystem();
            operatingSystem.Id = id;
            operatingSystem.Name = name;
            operatingSystem.Architecture = architecture;
            return operatingSystem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Architecture
        {
            get
            {
                return _Architecture;
            }
            set
            {
                OnArchitectureChanging(value);
                ReportPropertyChanging("Architecture");
                _Architecture = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Architecture");
                OnArchitectureChanged();
            }
        }
        private global::System.Int32 _Architecture;
        partial void OnArchitectureChanging(global::System.Int32 value);
        partial void OnArchitectureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Virtualization_OperatingSystem", "Virtualization")]
        public EntityCollection<Virtualization> Virtualizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Virtualization>("IPRequestFormModel.FK_Virtualization_OperatingSystem", "Virtualization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Virtualization>("IPRequestFormModel.FK_Virtualization_OperatingSystem", "Virtualization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="Port")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Port : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Port object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="iPId">Initial value of the IPId property.</param>
        /// <param name="portTypeId">Initial value of the PortTypeId property.</param>
        /// <param name="portNumber">Initial value of the PortNumber property.</param>
        /// <param name="serverInbound">Initial value of the ServerInbound property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Port CreatePort(global::System.Int32 id, global::System.Int32 iPId, global::System.Int32 portTypeId, global::System.Int32 portNumber, global::System.Boolean serverInbound, global::System.Int32 userId)
        {
            Port port = new Port();
            port.Id = id;
            port.IPId = iPId;
            port.PortTypeId = portTypeId;
            port.PortNumber = portNumber;
            port.ServerInbound = serverInbound;
            port.UserId = userId;
            return port;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IPId
        {
            get
            {
                return _IPId;
            }
            set
            {
                OnIPIdChanging(value);
                ReportPropertyChanging("IPId");
                _IPId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IPId");
                OnIPIdChanged();
            }
        }
        private global::System.Int32 _IPId;
        partial void OnIPIdChanging(global::System.Int32 value);
        partial void OnIPIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortTypeId
        {
            get
            {
                return _PortTypeId;
            }
            set
            {
                OnPortTypeIdChanging(value);
                ReportPropertyChanging("PortTypeId");
                _PortTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortTypeId");
                OnPortTypeIdChanged();
            }
        }
        private global::System.Int32 _PortTypeId;
        partial void OnPortTypeIdChanging(global::System.Int32 value);
        partial void OnPortTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortNumber
        {
            get
            {
                return _PortNumber;
            }
            set
            {
                OnPortNumberChanging(value);
                ReportPropertyChanging("PortNumber");
                _PortNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortNumber");
                OnPortNumberChanged();
            }
        }
        private global::System.Int32 _PortNumber;
        partial void OnPortNumberChanging(global::System.Int32 value);
        partial void OnPortNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ServerInbound
        {
            get
            {
                return _ServerInbound;
            }
            set
            {
                OnServerInboundChanging(value);
                ReportPropertyChanging("ServerInbound");
                _ServerInbound = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerInbound");
                OnServerInboundChanged();
            }
        }
        private global::System.Boolean _ServerInbound;
        partial void OnServerInboundChanging(global::System.Boolean value);
        partial void OnServerInboundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubnetMaskId
        {
            get
            {
                return _SubnetMaskId;
            }
            set
            {
                OnSubnetMaskIdChanging(value);
                ReportPropertyChanging("SubnetMaskId");
                _SubnetMaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubnetMaskId");
                OnSubnetMaskIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubnetMaskId;
        partial void OnSubnetMaskIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubnetMaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Port_IP", "IP")]
        public IP IP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Port_IP", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Port_IP", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> IPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Port_IP", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_Port_IP", "IP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Port_IP1", "IP")]
        public IP SubnetMask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Port_IP1", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Port_IP1", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> SubnetMaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Port_IP1", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_Port_IP1", "IP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Port_PortType", "PortType")]
        public PortType PortType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortType>("IPRequestFormModel.FK_Port_PortType", "PortType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortType>("IPRequestFormModel.FK_Port_PortType", "PortType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PortType> PortTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortType>("IPRequestFormModel.FK_Port_PortType", "PortType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PortType>("IPRequestFormModel.FK_Port_PortType", "PortType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Port_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_Port_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_Port_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_Port_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("IPRequestFormModel.FK_Port_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_RequestPort_Port", "RequestPort")]
        public EntityCollection<RequestPort> RequestPorts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestPort>("IPRequestFormModel.FK_RequestPort_Port", "RequestPort");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestPort>("IPRequestFormModel.FK_RequestPort_Port", "RequestPort", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="PortType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PortType CreatePortType(global::System.Int32 id, global::System.String name)
        {
            PortType portType = new PortType();
            portType.Id = id;
            portType.Name = name;
            return portType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Port_PortType", "Port")]
        public EntityCollection<Port> Ports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Port>("IPRequestFormModel.FK_Port_PortType", "Port");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Port>("IPRequestFormModel.FK_Port_PortType", "Port", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="Request")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Request : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Request object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="submissionDate">Initial value of the SubmissionDate property.</param>
        /// <param name="virtualizationId">Initial value of the VirtualizationId property.</param>
        /// <param name="ownerId">Initial value of the OwnerId property.</param>
        /// <param name="originalId">Initial value of the OriginalId property.</param>
        public static Request CreateRequest(global::System.Int32 id, global::System.String applicationName, global::System.Int32 userId, global::System.Boolean deleted, global::System.DateTime submissionDate, global::System.Int32 virtualizationId, global::System.Int32 ownerId, global::System.Int32 originalId)
        {
            Request request = new Request();
            request.Id = id;
            request.ApplicationName = applicationName;
            request.UserId = userId;
            request.Deleted = deleted;
            request.SubmissionDate = submissionDate;
            request.VirtualizationId = virtualizationId;
            request.OwnerId = ownerId;
            request.OriginalId = originalId;
            return request;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessService
        {
            get
            {
                return _BusinessService;
            }
            set
            {
                OnBusinessServiceChanging(value);
                ReportPropertyChanging("BusinessService");
                _BusinessService = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessService");
                OnBusinessServiceChanged();
            }
        }
        private global::System.String _BusinessService;
        partial void OnBusinessServiceChanging(global::System.String value);
        partial void OnBusinessServiceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OldRequestId
        {
            get
            {
                return _OldRequestId;
            }
            set
            {
                OnOldRequestIdChanging(value);
                ReportPropertyChanging("OldRequestId");
                _OldRequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldRequestId");
                OnOldRequestIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OldRequestId;
        partial void OnOldRequestIdChanging(Nullable<global::System.Int32> value);
        partial void OnOldRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SubmissionDate
        {
            get
            {
                return _SubmissionDate;
            }
            set
            {
                OnSubmissionDateChanging(value);
                ReportPropertyChanging("SubmissionDate");
                _SubmissionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmissionDate");
                OnSubmissionDateChanged();
            }
        }
        private global::System.DateTime _SubmissionDate;
        partial void OnSubmissionDateChanging(global::System.DateTime value);
        partial void OnSubmissionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VirtualizationId
        {
            get
            {
                return _VirtualizationId;
            }
            set
            {
                OnVirtualizationIdChanging(value);
                ReportPropertyChanging("VirtualizationId");
                _VirtualizationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualizationId");
                OnVirtualizationIdChanged();
            }
        }
        private global::System.Int32 _VirtualizationId;
        partial void OnVirtualizationIdChanging(global::System.Int32 value);
        partial void OnVirtualizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeleteDate
        {
            get
            {
                return _DeleteDate;
            }
            set
            {
                OnDeleteDateChanging(value);
                ReportPropertyChanging("DeleteDate");
                _DeleteDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteDate");
                OnDeleteDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeleteDate;
        partial void OnDeleteDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeleteDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private global::System.Int32 _OwnerId;
        partial void OnOwnerIdChanging(global::System.Int32 value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OriginalId
        {
            get
            {
                return _OriginalId;
            }
            set
            {
                OnOriginalIdChanging(value);
                ReportPropertyChanging("OriginalId");
                _OriginalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalId");
                OnOriginalIdChanged();
            }
        }
        private global::System.Int32 _OriginalId;
        partial void OnOriginalIdChanging(global::System.Int32 value);
        partial void OnOriginalIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_CommunicationAction_Request", "CommunicationAction")]
        public EntityCollection<CommunicationAction> CommunicationActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommunicationAction>("IPRequestFormModel.FK_CommunicationAction_Request", "CommunicationAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommunicationAction>("IPRequestFormModel.FK_CommunicationAction_Request", "CommunicationAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_Request", "Request1")]
        public EntityCollection<Request> NewerRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("IPRequestFormModel.FK_Request_Request", "Request1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("IPRequestFormModel.FK_Request_Request", "Request1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_Request", "Request")]
        public Request OldRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_Request_Request", "Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_Request_Request", "Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Request> OldRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_Request_Request", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Request>("IPRequestFormModel.FK_Request_Request", "Request", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_Request1", "Request1")]
        public EntityCollection<Request> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("IPRequestFormModel.FK_Request_Request1", "Request1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("IPRequestFormModel.FK_Request_Request1", "Request1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_Request1", "Request")]
        public Request OriginalRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_Request_Request1", "Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_Request_Request1", "Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Request> OriginalRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_Request_Request1", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Request>("IPRequestFormModel.FK_Request_Request1", "Request", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_Request_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_Request_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_Request_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("IPRequestFormModel.FK_Request_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_User1", "User")]
        public User Owner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_Request_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_Request_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> OwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_Request_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("IPRequestFormModel.FK_Request_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_Virtualization", "Virtualization")]
        public Virtualization Virtualization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Virtualization>("IPRequestFormModel.FK_Request_Virtualization", "Virtualization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Virtualization>("IPRequestFormModel.FK_Request_Virtualization", "Virtualization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Virtualization> VirtualizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Virtualization>("IPRequestFormModel.FK_Request_Virtualization", "Virtualization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Virtualization>("IPRequestFormModel.FK_Request_Virtualization", "Virtualization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_RequestApplicationType_Request", "RequestApplicationType")]
        public EntityCollection<RequestApplicationType> RequestApplicationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestApplicationType>("IPRequestFormModel.FK_RequestApplicationType_Request", "RequestApplicationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestApplicationType>("IPRequestFormModel.FK_RequestApplicationType_Request", "RequestApplicationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_RequestPort_Request", "RequestPort")]
        public EntityCollection<RequestPort> RequestPorts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestPort>("IPRequestFormModel.FK_RequestPort_Request", "RequestPort");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestPort>("IPRequestFormModel.FK_RequestPort_Request", "RequestPort", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SecurityAction_Request", "SecurityAction")]
        public EntityCollection<SecurityAction> SecurityActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityAction>("IPRequestFormModel.FK_SecurityAction_Request", "SecurityAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityAction>("IPRequestFormModel.FK_SecurityAction_Request", "SecurityAction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="RequestApplicationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestApplicationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestApplicationType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="applicationTypeId">Initial value of the ApplicationTypeId property.</param>
        public static RequestApplicationType CreateRequestApplicationType(global::System.Int32 id, global::System.Int32 requestId, global::System.Int32 applicationTypeId)
        {
            RequestApplicationType requestApplicationType = new RequestApplicationType();
            requestApplicationType.Id = id;
            requestApplicationType.RequestId = requestId;
            requestApplicationType.ApplicationTypeId = applicationTypeId;
            return requestApplicationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Int32 _RequestId;
        partial void OnRequestIdChanging(global::System.Int32 value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationTypeId
        {
            get
            {
                return _ApplicationTypeId;
            }
            set
            {
                OnApplicationTypeIdChanging(value);
                ReportPropertyChanging("ApplicationTypeId");
                _ApplicationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationTypeId");
                OnApplicationTypeIdChanged();
            }
        }
        private global::System.Int32 _ApplicationTypeId;
        partial void OnApplicationTypeIdChanging(global::System.Int32 value);
        partial void OnApplicationTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_RequestApplicationType_ApplicationType", "ApplicationType")]
        public ApplicationType ApplicationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationType>("IPRequestFormModel.FK_RequestApplicationType_ApplicationType", "ApplicationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationType>("IPRequestFormModel.FK_RequestApplicationType_ApplicationType", "ApplicationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationType> ApplicationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationType>("IPRequestFormModel.FK_RequestApplicationType_ApplicationType", "ApplicationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationType>("IPRequestFormModel.FK_RequestApplicationType_ApplicationType", "ApplicationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_RequestApplicationType_Request", "Request")]
        public Request Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_RequestApplicationType_Request", "Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_RequestApplicationType_Request", "Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Request> RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_RequestApplicationType_Request", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Request>("IPRequestFormModel.FK_RequestApplicationType_Request", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="RequestPort")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestPort : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestPort object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="portId">Initial value of the PortId property.</param>
        public static RequestPort CreateRequestPort(global::System.Int32 id, global::System.Int32 requestId, global::System.Int32 portId)
        {
            RequestPort requestPort = new RequestPort();
            requestPort.Id = id;
            requestPort.RequestId = requestId;
            requestPort.PortId = portId;
            return requestPort;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Int32 _RequestId;
        partial void OnRequestIdChanging(global::System.Int32 value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortId
        {
            get
            {
                return _PortId;
            }
            set
            {
                OnPortIdChanging(value);
                ReportPropertyChanging("PortId");
                _PortId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortId");
                OnPortIdChanged();
            }
        }
        private global::System.Int32 _PortId;
        partial void OnPortIdChanging(global::System.Int32 value);
        partial void OnPortIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_RequestPort_Port", "Port")]
        public Port Port
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Port>("IPRequestFormModel.FK_RequestPort_Port", "Port").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Port>("IPRequestFormModel.FK_RequestPort_Port", "Port").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Port> PortReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Port>("IPRequestFormModel.FK_RequestPort_Port", "Port");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Port>("IPRequestFormModel.FK_RequestPort_Port", "Port", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_RequestPort_Request", "Request")]
        public Request Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_RequestPort_Request", "Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_RequestPort_Request", "Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Request> RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_RequestPort_Request", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Request>("IPRequestFormModel.FK_RequestPort_Request", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="SecurityAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="assigned">Initial value of the Assigned property.</param>
        public static SecurityAction CreateSecurityAction(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime date, global::System.Int32 requestId, global::System.Boolean assigned)
        {
            SecurityAction securityAction = new SecurityAction();
            securityAction.Id = id;
            securityAction.UserId = userId;
            securityAction.Date = date;
            securityAction.RequestId = requestId;
            securityAction.Assigned = assigned;
            return securityAction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Approved;
        partial void OnApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VlanId
        {
            get
            {
                return _VlanId;
            }
            set
            {
                OnVlanIdChanging(value);
                ReportPropertyChanging("VlanId");
                _VlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VlanId");
                OnVlanIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VlanId;
        partial void OnVlanIdChanging(Nullable<global::System.Int32> value);
        partial void OnVlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Int32 _RequestId;
        partial void OnRequestIdChanging(global::System.Int32 value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Assigned
        {
            get
            {
                return _Assigned;
            }
            set
            {
                OnAssignedChanging(value);
                ReportPropertyChanging("Assigned");
                _Assigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Assigned");
                OnAssignedChanged();
            }
        }
        private global::System.Boolean _Assigned;
        partial void OnAssignedChanging(global::System.Boolean value);
        partial void OnAssignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SecurityAction_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_SecurityAction_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_SecurityAction_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("IPRequestFormModel.FK_SecurityAction_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("IPRequestFormModel.FK_SecurityAction_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SecurityAction_Vlan", "Vlan")]
        public Vlan Vlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vlan>("IPRequestFormModel.FK_SecurityAction_Vlan", "Vlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vlan>("IPRequestFormModel.FK_SecurityAction_Vlan", "Vlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vlan> VlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vlan>("IPRequestFormModel.FK_SecurityAction_Vlan", "Vlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vlan>("IPRequestFormModel.FK_SecurityAction_Vlan", "Vlan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SecurityAction_Request", "Request")]
        public Request Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_SecurityAction_Request", "Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_SecurityAction_Request", "Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Request> RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("IPRequestFormModel.FK_SecurityAction_Request", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Request>("IPRequestFormModel.FK_SecurityAction_Request", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="Segment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Segment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Segment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="subnetMaskId">Initial value of the SubnetMaskId property.</param>
        /// <param name="gatewayId">Initial value of the GatewayId property.</param>
        /// <param name="vlanId">Initial value of the VlanId property.</param>
        public static Segment CreateSegment(global::System.Int32 id, global::System.String name, global::System.Int32 subnetMaskId, global::System.Int32 gatewayId, global::System.Int32 vlanId)
        {
            Segment segment = new Segment();
            segment.Id = id;
            segment.Name = name;
            segment.SubnetMaskId = subnetMaskId;
            segment.GatewayId = gatewayId;
            segment.VlanId = vlanId;
            return segment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubnetMaskId
        {
            get
            {
                return _SubnetMaskId;
            }
            set
            {
                OnSubnetMaskIdChanging(value);
                ReportPropertyChanging("SubnetMaskId");
                _SubnetMaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubnetMaskId");
                OnSubnetMaskIdChanged();
            }
        }
        private global::System.Int32 _SubnetMaskId;
        partial void OnSubnetMaskIdChanging(global::System.Int32 value);
        partial void OnSubnetMaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GatewayId
        {
            get
            {
                return _GatewayId;
            }
            set
            {
                OnGatewayIdChanging(value);
                ReportPropertyChanging("GatewayId");
                _GatewayId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GatewayId");
                OnGatewayIdChanged();
            }
        }
        private global::System.Int32 _GatewayId;
        partial void OnGatewayIdChanging(global::System.Int32 value);
        partial void OnGatewayIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VlanId
        {
            get
            {
                return _VlanId;
            }
            set
            {
                OnVlanIdChanging(value);
                ReportPropertyChanging("VlanId");
                _VlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VlanId");
                OnVlanIdChanged();
            }
        }
        private global::System.Int32 _VlanId;
        partial void OnVlanIdChanging(global::System.Int32 value);
        partial void OnVlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IPGroupId
        {
            get
            {
                return _IPGroupId;
            }
            set
            {
                OnIPGroupIdChanging(value);
                ReportPropertyChanging("IPGroupId");
                _IPGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IPGroupId");
                OnIPGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IPGroupId;
        partial void OnIPGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnIPGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_IP_Segment", "IP")]
        public EntityCollection<IP> IPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IP>("IPRequestFormModel.FK_IP_Segment", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IP>("IPRequestFormModel.FK_IP_Segment", "IP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Segment_IP", "IP")]
        public IP Gateway
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Segment_IP", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Segment_IP", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> GatewayReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Segment_IP", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_Segment_IP", "IP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Segment_IP1", "IP")]
        public IP SubnetMask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Segment_IP1", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Segment_IP1", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> SubnetMaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Segment_IP1", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_Segment_IP1", "IP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Segment_IPGroup", "IPGroup")]
        public IPGroup IPGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IPGroup>("IPRequestFormModel.FK_Segment_IPGroup", "IPGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IPGroup>("IPRequestFormModel.FK_Segment_IPGroup", "IPGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IPGroup> IPGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IPGroup>("IPRequestFormModel.FK_Segment_IPGroup", "IPGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IPGroup>("IPRequestFormModel.FK_Segment_IPGroup", "IPGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Segment_Vlan", "Vlan")]
        public Vlan Vlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vlan>("IPRequestFormModel.FK_Segment_Vlan", "Vlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vlan>("IPRequestFormModel.FK_Segment_Vlan", "Vlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vlan> VlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vlan>("IPRequestFormModel.FK_Segment_Vlan", "Vlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vlan>("IPRequestFormModel.FK_Segment_Vlan", "Vlan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SegmentLocation_Segment", "SegmentLocation")]
        public EntityCollection<SegmentLocation> SegmentLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SegmentLocation>("IPRequestFormModel.FK_SegmentLocation_Segment", "SegmentLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SegmentLocation>("IPRequestFormModel.FK_SegmentLocation_Segment", "SegmentLocation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="SegmentLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SegmentLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SegmentLocation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="segmentId">Initial value of the SegmentId property.</param>
        public static SegmentLocation CreateSegmentLocation(global::System.Int32 id, global::System.Int32 locationId, global::System.Int32 segmentId)
        {
            SegmentLocation segmentLocation = new SegmentLocation();
            segmentLocation.Id = id;
            segmentLocation.LocationId = locationId;
            segmentLocation.SegmentId = segmentId;
            return segmentLocation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SegmentId
        {
            get
            {
                return _SegmentId;
            }
            set
            {
                OnSegmentIdChanging(value);
                ReportPropertyChanging("SegmentId");
                _SegmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SegmentId");
                OnSegmentIdChanged();
            }
        }
        private global::System.Int32 _SegmentId;
        partial void OnSegmentIdChanging(global::System.Int32 value);
        partial void OnSegmentIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SegmentLocation_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("IPRequestFormModel.FK_SegmentLocation_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("IPRequestFormModel.FK_SegmentLocation_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("IPRequestFormModel.FK_SegmentLocation_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("IPRequestFormModel.FK_SegmentLocation_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SegmentLocation_Segment", "Segment")]
        public Segment Segment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("IPRequestFormModel.FK_SegmentLocation_Segment", "Segment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("IPRequestFormModel.FK_SegmentLocation_Segment", "Segment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Segment> SegmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Segment>("IPRequestFormModel.FK_SegmentLocation_Segment", "Segment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Segment>("IPRequestFormModel.FK_SegmentLocation_Segment", "Segment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="Server")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Server : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Server object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="serverTypeId">Initial value of the ServerTypeId property.</param>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        public static Server CreateServer(global::System.Int32 id, global::System.Int32 serverTypeId, global::System.Int32 locationId)
        {
            Server server = new Server();
            server.Id = id;
            server.ServerTypeId = serverTypeId;
            server.LocationId = locationId;
            return server;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServerTypeId
        {
            get
            {
                return _ServerTypeId;
            }
            set
            {
                OnServerTypeIdChanging(value);
                ReportPropertyChanging("ServerTypeId");
                _ServerTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerTypeId");
                OnServerTypeIdChanged();
            }
        }
        private global::System.Int32 _ServerTypeId;
        partial void OnServerTypeIdChanging(global::System.Int32 value);
        partial void OnServerTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BladeChassisId
        {
            get
            {
                return _BladeChassisId;
            }
            set
            {
                OnBladeChassisIdChanging(value);
                ReportPropertyChanging("BladeChassisId");
                _BladeChassisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BladeChassisId");
                OnBladeChassisIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BladeChassisId;
        partial void OnBladeChassisIdChanging(Nullable<global::System.Int32> value);
        partial void OnBladeChassisIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HostIPId
        {
            get
            {
                return _HostIPId;
            }
            set
            {
                OnHostIPIdChanging(value);
                ReportPropertyChanging("HostIPId");
                _HostIPId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostIPId");
                OnHostIPIdChanged();
            }
        }
        private Nullable<global::System.Int32> _HostIPId;
        partial void OnHostIPIdChanging(Nullable<global::System.Int32> value);
        partial void OnHostIPIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Server_BladeChassis", "BladeChassi")]
        public BladeChassis BladeChassi
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BladeChassis>("IPRequestFormModel.FK_Server_BladeChassis", "BladeChassi").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BladeChassis>("IPRequestFormModel.FK_Server_BladeChassis", "BladeChassi").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BladeChassis> BladeChassiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BladeChassis>("IPRequestFormModel.FK_Server_BladeChassis", "BladeChassi");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BladeChassis>("IPRequestFormModel.FK_Server_BladeChassis", "BladeChassi", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Server_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("IPRequestFormModel.FK_Server_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("IPRequestFormModel.FK_Server_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("IPRequestFormModel.FK_Server_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("IPRequestFormModel.FK_Server_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Server_ServerType", "ServerType")]
        public ServerType ServerType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServerType>("IPRequestFormModel.FK_Server_ServerType", "ServerType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServerType>("IPRequestFormModel.FK_Server_ServerType", "ServerType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServerType> ServerTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServerType>("IPRequestFormModel.FK_Server_ServerType", "ServerType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServerType>("IPRequestFormModel.FK_Server_ServerType", "ServerType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Virtualization_Server", "Virtualization")]
        public EntityCollection<Virtualization> Virtualizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Virtualization>("IPRequestFormModel.FK_Virtualization_Server", "Virtualization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Virtualization>("IPRequestFormModel.FK_Virtualization_Server", "Virtualization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Server_IP", "IP")]
        public IP IP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Server_IP", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Server_IP", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> IPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Server_IP", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_Server_IP", "IP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="ServerIP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServerIP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServerIP object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="virtualizationId">Initial value of the VirtualizationId property.</param>
        public static ServerIP CreateServerIP(global::System.Int32 id, global::System.Int32 virtualizationId)
        {
            ServerIP serverIP = new ServerIP();
            serverIP.Id = id;
            serverIP.VirtualizationId = virtualizationId;
            return serverIP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IPId
        {
            get
            {
                return _IPId;
            }
            set
            {
                OnIPIdChanging(value);
                ReportPropertyChanging("IPId");
                _IPId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IPId");
                OnIPIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IPId;
        partial void OnIPIdChanging(Nullable<global::System.Int32> value);
        partial void OnIPIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VirtualizationId
        {
            get
            {
                return _VirtualizationId;
            }
            set
            {
                OnVirtualizationIdChanging(value);
                ReportPropertyChanging("VirtualizationId");
                _VirtualizationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VirtualizationId");
                OnVirtualizationIdChanged();
            }
        }
        private global::System.Int32 _VirtualizationId;
        partial void OnVirtualizationIdChanging(global::System.Int32 value);
        partial void OnVirtualizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SwitchPortId
        {
            get
            {
                return _SwitchPortId;
            }
            set
            {
                OnSwitchPortIdChanging(value);
                ReportPropertyChanging("SwitchPortId");
                _SwitchPortId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwitchPortId");
                OnSwitchPortIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SwitchPortId;
        partial void OnSwitchPortIdChanging(Nullable<global::System.Int32> value);
        partial void OnSwitchPortIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_CommunicationAction_ServerIP", "CommunicationAction")]
        public EntityCollection<CommunicationAction> CommunicationActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommunicationAction>("IPRequestFormModel.FK_CommunicationAction_ServerIP", "CommunicationAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommunicationAction>("IPRequestFormModel.FK_CommunicationAction_ServerIP", "CommunicationAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_ServerIP_SwitchPort", "SwitchPort")]
        public SwitchPort SwitchPort
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SwitchPort>("IPRequestFormModel.FK_ServerIP_SwitchPort", "SwitchPort").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SwitchPort>("IPRequestFormModel.FK_ServerIP_SwitchPort", "SwitchPort").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SwitchPort> SwitchPortReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SwitchPort>("IPRequestFormModel.FK_ServerIP_SwitchPort", "SwitchPort");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SwitchPort>("IPRequestFormModel.FK_ServerIP_SwitchPort", "SwitchPort", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_ServerIP_Virtualization", "Virtualization")]
        public Virtualization Virtualization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Virtualization>("IPRequestFormModel.FK_ServerIP_Virtualization", "Virtualization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Virtualization>("IPRequestFormModel.FK_ServerIP_Virtualization", "Virtualization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Virtualization> VirtualizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Virtualization>("IPRequestFormModel.FK_ServerIP_Virtualization", "Virtualization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Virtualization>("IPRequestFormModel.FK_ServerIP_Virtualization", "Virtualization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_ServerIP_IP", "IP")]
        public IP IP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_ServerIP_IP", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_ServerIP_IP", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> IPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_ServerIP_IP", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_ServerIP_IP", "IP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="ServerType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServerType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServerType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ServerType CreateServerType(global::System.Int32 id, global::System.String name)
        {
            ServerType serverType = new ServerType();
            serverType.Id = id;
            serverType.Name = name;
            return serverType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Server_ServerType", "Server")]
        public EntityCollection<Server> Servers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Server>("IPRequestFormModel.FK_Server_ServerType", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Server>("IPRequestFormModel.FK_Server_ServerType", "Server", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="Switch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Switch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Switch object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="iPId">Initial value of the IPId property.</param>
        public static Switch CreateSwitch(global::System.Int32 id, global::System.String name, global::System.Int32 iPId)
        {
            Switch @switch = new Switch();
            @switch.Id = id;
            @switch.Name = name;
            @switch.IPId = iPId;
            return @switch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IPId
        {
            get
            {
                return _IPId;
            }
            set
            {
                OnIPIdChanging(value);
                ReportPropertyChanging("IPId");
                _IPId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IPId");
                OnIPIdChanged();
            }
        }
        private global::System.Int32 _IPId;
        partial void OnIPIdChanging(global::System.Int32 value);
        partial void OnIPIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StackableNumber
        {
            get
            {
                return _StackableNumber;
            }
            set
            {
                OnStackableNumberChanging(value);
                ReportPropertyChanging("StackableNumber");
                _StackableNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StackableNumber");
                OnStackableNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _StackableNumber;
        partial void OnStackableNumberChanging(Nullable<global::System.Int32> value);
        partial void OnStackableNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SwitchModule_Switch", "SwitchModule")]
        public EntityCollection<SwitchModule> SwitchModules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SwitchModule>("IPRequestFormModel.FK_SwitchModule_Switch", "SwitchModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SwitchModule>("IPRequestFormModel.FK_SwitchModule_Switch", "SwitchModule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Switch_IP", "IP")]
        public IP IP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Switch_IP", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Switch_IP", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> IPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Switch_IP", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_Switch_IP", "IP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="SwitchModule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SwitchModule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SwitchModule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="switchId">Initial value of the SwitchId property.</param>
        public static SwitchModule CreateSwitchModule(global::System.Int32 id, global::System.Int32 number, global::System.Int32 switchId)
        {
            SwitchModule switchModule = new SwitchModule();
            switchModule.Id = id;
            switchModule.Number = number;
            switchModule.SwitchId = switchId;
            return switchModule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SwitchId
        {
            get
            {
                return _SwitchId;
            }
            set
            {
                OnSwitchIdChanging(value);
                ReportPropertyChanging("SwitchId");
                _SwitchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwitchId");
                OnSwitchIdChanged();
            }
        }
        private global::System.Int32 _SwitchId;
        partial void OnSwitchIdChanging(global::System.Int32 value);
        partial void OnSwitchIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SwitchModule_Switch", "Switch")]
        public Switch Switch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Switch>("IPRequestFormModel.FK_SwitchModule_Switch", "Switch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Switch>("IPRequestFormModel.FK_SwitchModule_Switch", "Switch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Switch> SwitchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Switch>("IPRequestFormModel.FK_SwitchModule_Switch", "Switch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Switch>("IPRequestFormModel.FK_SwitchModule_Switch", "Switch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SwitchPort_SwitchModule", "SwitchPort")]
        public EntityCollection<SwitchPort> SwitchPorts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SwitchPort>("IPRequestFormModel.FK_SwitchPort_SwitchModule", "SwitchPort");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SwitchPort>("IPRequestFormModel.FK_SwitchPort_SwitchModule", "SwitchPort", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="SwitchPort")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SwitchPort : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SwitchPort object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="switchModuleId">Initial value of the SwitchModuleId property.</param>
        /// <param name="port">Initial value of the Port property.</param>
        public static SwitchPort CreateSwitchPort(global::System.Int32 id, global::System.Int32 switchModuleId, global::System.Int32 port)
        {
            SwitchPort switchPort = new SwitchPort();
            switchPort.Id = id;
            switchPort.SwitchModuleId = switchModuleId;
            switchPort.Port = port;
            return switchPort;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SwitchModuleId
        {
            get
            {
                return _SwitchModuleId;
            }
            set
            {
                OnSwitchModuleIdChanging(value);
                ReportPropertyChanging("SwitchModuleId");
                _SwitchModuleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwitchModuleId");
                OnSwitchModuleIdChanged();
            }
        }
        private global::System.Int32 _SwitchModuleId;
        partial void OnSwitchModuleIdChanging(global::System.Int32 value);
        partial void OnSwitchModuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private global::System.Int32 _Port;
        partial void OnPortChanging(global::System.Int32 value);
        partial void OnPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VoiceIPId
        {
            get
            {
                return _VoiceIPId;
            }
            set
            {
                OnVoiceIPIdChanging(value);
                ReportPropertyChanging("VoiceIPId");
                _VoiceIPId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoiceIPId");
                OnVoiceIPIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VoiceIPId;
        partial void OnVoiceIPIdChanging(Nullable<global::System.Int32> value);
        partial void OnVoiceIPIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_ServerIP_SwitchPort", "ServerIP")]
        public EntityCollection<ServerIP> ServerIPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServerIP>("IPRequestFormModel.FK_ServerIP_SwitchPort", "ServerIP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServerIP>("IPRequestFormModel.FK_ServerIP_SwitchPort", "ServerIP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SwitchPort_SwitchModule", "SwitchModule")]
        public SwitchModule SwitchModule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SwitchModule>("IPRequestFormModel.FK_SwitchPort_SwitchModule", "SwitchModule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SwitchModule>("IPRequestFormModel.FK_SwitchPort_SwitchModule", "SwitchModule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SwitchModule> SwitchModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SwitchModule>("IPRequestFormModel.FK_SwitchPort_SwitchModule", "SwitchModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SwitchModule>("IPRequestFormModel.FK_SwitchPort_SwitchModule", "SwitchModule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SwitchPort_IP", "IP")]
        public IP IP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_SwitchPort_IP", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_SwitchPort_IP", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> IPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_SwitchPort_IP", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_SwitchPort_IP", "IP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="membershipUserId">Initial value of the MembershipUserId property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String username, global::System.Guid membershipUserId, global::System.Int32 departmentId)
        {
            User user = new User();
            user.Id = id;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.Username = username;
            user.MembershipUserId = membershipUserId;
            user.DepartmentId = departmentId;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResetToken
        {
            get
            {
                return _ResetToken;
            }
            set
            {
                OnResetTokenChanging(value);
                ReportPropertyChanging("ResetToken");
                _ResetToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResetToken");
                OnResetTokenChanged();
            }
        }
        private global::System.String _ResetToken;
        partial void OnResetTokenChanging(global::System.String value);
        partial void OnResetTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MembershipUserId
        {
            get
            {
                return _MembershipUserId;
            }
            set
            {
                OnMembershipUserIdChanging(value);
                ReportPropertyChanging("MembershipUserId");
                _MembershipUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MembershipUserId");
                OnMembershipUserIdChanged();
            }
        }
        private global::System.Guid _MembershipUserId;
        partial void OnMembershipUserIdChanging(global::System.Guid value);
        partial void OnMembershipUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_User_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK_User_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK_User_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("IPRequestFormModel.FK_User_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("IPRequestFormModel.FK_User_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_CommunicationAction_User", "CommunicationAction")]
        public EntityCollection<CommunicationAction> CommunicationActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommunicationAction>("IPRequestFormModel.FK_CommunicationAction_User", "CommunicationAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommunicationAction>("IPRequestFormModel.FK_CommunicationAction_User", "CommunicationAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_User_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("IPRequestFormModel.FK_User_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("IPRequestFormModel.FK_User_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("IPRequestFormModel.FK_User_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("IPRequestFormModel.FK_User_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SecurityAction_User", "SecurityAction")]
        public EntityCollection<SecurityAction> SecurityActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityAction>("IPRequestFormModel.FK_SecurityAction_User", "SecurityAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityAction>("IPRequestFormModel.FK_SecurityAction_User", "SecurityAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Port_User", "Port")]
        public EntityCollection<Port> Ports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Port>("IPRequestFormModel.FK_Port_User", "Port");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Port>("IPRequestFormModel.FK_Port_User", "Port", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_User", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("IPRequestFormModel.FK_Request_User", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("IPRequestFormModel.FK_Request_User", "Request", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_User1", "Request")]
        public EntityCollection<Request> Requests1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("IPRequestFormModel.FK_Request_User1", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("IPRequestFormModel.FK_Request_User1", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="Virtualization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Virtualization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Virtualization object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="serverId">Initial value of the ServerId property.</param>
        /// <param name="operatingSystemId">Initial value of the OperatingSystemId property.</param>
        /// <param name="netBIOSName">Initial value of the NetBIOSName property.</param>
        /// <param name="dNSName">Initial value of the DNSName property.</param>
        public static Virtualization CreateVirtualization(global::System.Int32 id, global::System.Int32 serverId, global::System.Int32 operatingSystemId, global::System.String netBIOSName, global::System.String dNSName)
        {
            Virtualization virtualization = new Virtualization();
            virtualization.Id = id;
            virtualization.ServerId = serverId;
            virtualization.OperatingSystemId = operatingSystemId;
            virtualization.NetBIOSName = netBIOSName;
            virtualization.DNSName = dNSName;
            return virtualization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServerId
        {
            get
            {
                return _ServerId;
            }
            set
            {
                OnServerIdChanging(value);
                ReportPropertyChanging("ServerId");
                _ServerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerId");
                OnServerIdChanged();
            }
        }
        private global::System.Int32 _ServerId;
        partial void OnServerIdChanging(global::System.Int32 value);
        partial void OnServerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperatingSystemId
        {
            get
            {
                return _OperatingSystemId;
            }
            set
            {
                OnOperatingSystemIdChanging(value);
                ReportPropertyChanging("OperatingSystemId");
                _OperatingSystemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperatingSystemId");
                OnOperatingSystemIdChanged();
            }
        }
        private global::System.Int32 _OperatingSystemId;
        partial void OnOperatingSystemIdChanging(global::System.Int32 value);
        partial void OnOperatingSystemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NetBIOSName
        {
            get
            {
                return _NetBIOSName;
            }
            set
            {
                OnNetBIOSNameChanging(value);
                ReportPropertyChanging("NetBIOSName");
                _NetBIOSName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NetBIOSName");
                OnNetBIOSNameChanged();
            }
        }
        private global::System.String _NetBIOSName;
        partial void OnNetBIOSNameChanging(global::System.String value);
        partial void OnNetBIOSNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DNSName
        {
            get
            {
                return _DNSName;
            }
            set
            {
                OnDNSNameChanging(value);
                ReportPropertyChanging("DNSName");
                _DNSName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DNSName");
                OnDNSNameChanged();
            }
        }
        private global::System.String _DNSName;
        partial void OnDNSNameChanging(global::System.String value);
        partial void OnDNSNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Virtualization_OperatingSystem", "OperatingSystem")]
        public OperatingSystem OperatingSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperatingSystem>("IPRequestFormModel.FK_Virtualization_OperatingSystem", "OperatingSystem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperatingSystem>("IPRequestFormModel.FK_Virtualization_OperatingSystem", "OperatingSystem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OperatingSystem> OperatingSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperatingSystem>("IPRequestFormModel.FK_Virtualization_OperatingSystem", "OperatingSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OperatingSystem>("IPRequestFormModel.FK_Virtualization_OperatingSystem", "OperatingSystem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Virtualization_Server", "Server")]
        public Server Server
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("IPRequestFormModel.FK_Virtualization_Server", "Server").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("IPRequestFormModel.FK_Virtualization_Server", "Server").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Server> ServerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Server>("IPRequestFormModel.FK_Virtualization_Server", "Server");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Server>("IPRequestFormModel.FK_Virtualization_Server", "Server", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_ServerIP_Virtualization", "ServerIP")]
        public EntityCollection<ServerIP> ServerIPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServerIP>("IPRequestFormModel.FK_ServerIP_Virtualization", "ServerIP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServerIP>("IPRequestFormModel.FK_ServerIP_Virtualization", "ServerIP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Request_Virtualization", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("IPRequestFormModel.FK_Request_Virtualization", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("IPRequestFormModel.FK_Request_Virtualization", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IPRequestFormModel", Name="Vlan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vlan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vlan object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="subnetMaskId">Initial value of the SubnetMaskId property.</param>
        public static Vlan CreateVlan(global::System.Int32 id, global::System.String name, global::System.Int32 number, global::System.Int32 subnetMaskId)
        {
            Vlan vlan = new Vlan();
            vlan.Id = id;
            vlan.Name = name;
            vlan.Number = number;
            vlan.SubnetMaskId = subnetMaskId;
            return vlan;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubnetMaskId
        {
            get
            {
                return _SubnetMaskId;
            }
            set
            {
                OnSubnetMaskIdChanging(value);
                ReportPropertyChanging("SubnetMaskId");
                _SubnetMaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubnetMaskId");
                OnSubnetMaskIdChanged();
            }
        }
        private global::System.Int32 _SubnetMaskId;
        partial void OnSubnetMaskIdChanging(global::System.Int32 value);
        partial void OnSubnetMaskIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_SecurityAction_Vlan", "SecurityAction")]
        public EntityCollection<SecurityAction> SecurityActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityAction>("IPRequestFormModel.FK_SecurityAction_Vlan", "SecurityAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityAction>("IPRequestFormModel.FK_SecurityAction_Vlan", "SecurityAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Vlan_IP", "IP")]
        public IP IP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Vlan_IP", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Vlan_IP", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> IPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("IPRequestFormModel.FK_Vlan_IP", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("IPRequestFormModel.FK_Vlan_IP", "IP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IPRequestFormModel", "FK_Segment_Vlan", "Segment")]
        public EntityCollection<Segment> Segments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Segment>("IPRequestFormModel.FK_Segment_Vlan", "Segment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Segment>("IPRequestFormModel.FK_Segment_Vlan", "Segment", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
